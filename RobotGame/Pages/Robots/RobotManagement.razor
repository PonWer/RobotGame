@page "/robotmanagement"
@using RobotGame.Shared.Robot
@inherits RobotManagementBase

<h3>RobotManagement</h3>

<button class="btn btn-primary" @onclick="AddRobot">
    Add Robot
</button>


@foreach (var robot in Game.RobotManager.Robots)
{
    <div style="border: 1px solid black">
        <div style="align-content: space-evenly; align-items: center; border: 1px solid black">
            <div>
                <span class="oi oi-power-standby" aria-hidden="true"></span>
                <h4 class="navbar-brand">Energy: @robot.Battery_Current/@robot.Battery_Max</h4>
                
                <span class="oi oi-pencil" aria-hidden="true"></span>
                <h4 class="navbar-brand">Health: @robot.HealthPercentage% (@robot.HealthCurrent/@robot.Health_Max)</h4>
            </div>
        </div>
        <div class="grid-container">
            <div class="grid-item">
                Job:
                <select @onchange="@robot.OnSelectedJobChange" value="@robot.CurrentState.Name()">
                    @foreach (var template in AllJobs)
                    {
                        <option value=@template>@template</option>
                    }
                </select>
                Zone:
                <select @onchange="@robot.OnSelectedZoneChange" value="@robot.CurrentZone.Name">
                    @foreach (var zone in WorldManager.Instance.AllZoneNames)
                    {
                        <option value=@zone>@zone</option>
                    }
                </select>
                <Check TValue="bool" @bind-Checked="@robot.ReturnToPreviousStateOnMaxBattery">Repeat Job:</Check>
                </div>
            <div class="grid-item">
                @if (robot.CurrentProgress != null)
                {
                    <span class="oi oi-person" aria-hidden="true"></span>
                    @foreach (var spot in robot.CurrentProgress.PlaceOccupied)
                    {
                        @if (spot)
                        {
                            switch (robot.CurrentProgress.ObstacleType)
                            {
                                case JobProgress.Obstacle.Tree:
                                    <img src="images/Tree_LowRes.jpg" alt="Image" />
                                    break;
                                case JobProgress.Obstacle.OreVein:
                                    <img src="images/MineOre_LowRes.jpg" alt="Image" />
                                    break;
                                case JobProgress.Obstacle.Enemy:
                                    <span>enemy</span>
                                    break;
                                default:
                                    <span>ERROR MISSING IMAGE</span>
                                    break;
                            }


                        }
                        else
                        {
                            <span>_</span>
                        }
                    }
                }
                else
                {
                    <span>No progress</span>
                }
            </div>
        </div>
    </div>
    <br/>
}